{"version":3,"file":"static/js/668.871fb57d.chunk.js","mappings":"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","sources":["components/Dock/index.tsx","components/Applications/app.style.tsx","components/Applications/Resume/index.tsx","components/Applications/Terminal/index.tsx","components/Applications/Spotify/index.tsx","components/Applications/Note/index.tsx","components/Applications/Chrome/index.tsx","components/Applications/Telegram/index.tsx","components/Applications/AppStore/index.tsx","components/Applications/VSCode/index.tsx","components/Applications/Finder/index.tsx","components/Applications/Notion/index.tsx","components/Applications/index.tsx"],"sourcesContent":["type DockProps = {\n  children: JSX.Element | JSX.Element[];\n};\n\nconst Dock = (props: DockProps) => {\n  const { children } = props;\n\n  return (\n    <div\n      className=\"bg-[rgba(98,98,98,0.7)] absolute z-10 bottom-0 left-1/2 p-3 rounded-t flex gap-5\"\n      style={{ transform: \"translate(-50%,0%)\" }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Dock;\n","interface AppIconProps {\n  children: JSX.Element;\n}\n\nconst AppIcon = (props: AppIconProps) => (\n  <div className=\"w-14 h-14\">{props.children}</div>\n);\n\ninterface AppNameProps {\n  children: string;\n}\n\nconst AppName = (props: AppNameProps) => (\n  <span\n    className=\"text-sm text-white overflow-hidden text-ellipsis w-full text-center\"\n    style={{ textShadow: \"0px 0px 3px black\" }}\n  >\n    {props.children}\n  </span>\n);\n\nconst AppStyle = {\n  AppIcon,\n  AppName,\n};\n\nexport default AppStyle;\n","import Icons from \"../../../icons\";\nimport AppStyle from \"../app.style\";\n\nconst Resume = () => {\n  return (\n    <>\n      <AppStyle.AppIcon>\n        <Icons.PDF />\n      </AppStyle.AppIcon>\n      <AppStyle.AppName>My Resume</AppStyle.AppName>\n    </>\n  );\n};\n\nexport const ResumeDock = () => {\n  return (\n    <>\n      <AppStyle.AppIcon>\n        <Icons.PDF />\n      </AppStyle.AppIcon>\n    </>\n  );\n};\n\nexport default Resume;\n","import Icons from \"../../../icons\";\nimport AppStyle from \"../app.style\";\n\nconst Terminal = () => {\n  return (\n    <>\n      <AppStyle.AppIcon>\n        <Icons.Terminal />\n      </AppStyle.AppIcon>\n      <AppStyle.AppName>iTerm2</AppStyle.AppName>\n    </>\n  );\n};\n\nexport const TerminalDock = () => {\n  return (\n    <>\n      <AppStyle.AppIcon>\n        <Icons.Terminal />\n      </AppStyle.AppIcon>\n    </>\n  );\n};\n\nexport default Terminal;\n","import Icons from \"../../../icons\";\nimport AppStyle from \"../app.style\";\n\ninterface SpotifyDockProps {\n  icon: string;\n}\n\nconst Spotify = () => {\n  return (\n    <>\n      <AppStyle.AppIcon>\n        <img alt=\"spotify\" src={Icons.Spotify} />\n      </AppStyle.AppIcon>\n      <AppStyle.AppName>Spotify</AppStyle.AppName>\n    </>\n  );\n};\n\nexport const SpotifyDock = (props: SpotifyDockProps) => {\n  const { icon } = props;\n\n  return (\n    <>\n      <AppStyle.AppIcon>\n        <img alt=\"spotify\" src={icon} />\n      </AppStyle.AppIcon>\n    </>\n  );\n};\n\nexport default Spotify;\n","import Icons from \"../../../icons\";\nimport AppStyle from \"../app.style\";\n\ninterface NoteDockProps {\n  icon: string;\n}\n\nconst Note = () => {\n  return (\n    <>\n      <AppStyle.AppIcon>\n        <img alt=\"note\" src={Icons.Note} />\n      </AppStyle.AppIcon>\n      <AppStyle.AppName>Note</AppStyle.AppName>\n    </>\n  );\n};\n\nexport const NoteDock = (props: NoteDockProps) => {\n  const { icon } = props;\n\n  return (\n    <>\n      <AppStyle.AppIcon>\n        <img alt=\"note\" src={icon} />\n      </AppStyle.AppIcon>\n    </>\n  );\n};\n\nexport default Note;\n","import Icons from \"../../../icons\";\nimport AppStyle from \"../app.style\";\n\ninterface ChromeDockProps {\n  icon: string;\n}\n\nconst Chrome = () => {\n  return (\n    <>\n      <AppStyle.AppIcon>\n        <img alt=\"chrome\" src={Icons.Chrome} />\n      </AppStyle.AppIcon>\n      <AppStyle.AppName>Chrome</AppStyle.AppName>\n    </>\n  );\n};\n\nexport const ChromeDock = (props: ChromeDockProps) => {\n  const { icon } = props;\n\n  return (\n    <>\n      <AppStyle.AppIcon>\n        <a href=\"https://www.google.com\" target=\"_blank\" rel=\"noreferrer\">\n          <img alt=\"chrome\" src={icon} />\n        </a>\n      </AppStyle.AppIcon>\n    </>\n  );\n};\n\nexport default Chrome;\n","import Icons from \"../../../icons\";\nimport AppStyle from \"../app.style\";\n\ninterface TelegramDockProps {\n  icon: string;\n}\n\nconst Telegram = () => {\n  return (\n    <>\n      <AppStyle.AppIcon>\n        <img alt=\"telegram\" src={Icons.Telegram} />\n      </AppStyle.AppIcon>\n      <AppStyle.AppName>Telegram</AppStyle.AppName>\n    </>\n  );\n};\n\nexport const TelegramDock = (props: TelegramDockProps) => {\n  const { icon } = props;\n\n  return (\n    <>\n      <AppStyle.AppIcon>\n        <a href=\"https://web.telegram.org/\" target=\"_blank\" rel=\"noreferrer\">\n          <img alt=\"telegram\" src={icon} />\n        </a>\n      </AppStyle.AppIcon>\n    </>\n  );\n};\n\nexport default Telegram;\n","import Icons from \"../../../icons\";\nimport AppStyle from \"../app.style\";\n\ninterface AppStoreDockProps {\n  icon: string;\n}\n\nconst AppStore = () => {\n  return (\n    <>\n      <AppStyle.AppIcon>\n        <img alt=\"appStore\" src={Icons.AppStore} />\n      </AppStyle.AppIcon>\n      <AppStyle.AppName>AppStore</AppStyle.AppName>\n    </>\n  );\n};\n\nexport const AppStoreDock = (props: AppStoreDockProps) => {\n  const { icon } = props;\n\n  return (\n    <>\n      <AppStyle.AppIcon>\n        <a\n          href=\"https://www.apple.com/th/store\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <img alt=\"appStore\" src={icon} />\n        </a>\n      </AppStyle.AppIcon>\n    </>\n  );\n};\n\nexport default AppStore;\n","import Icons from \"../../../icons\";\nimport AppStyle from \"../app.style\";\n\ninterface VSCodeDockProps {\n  icon: string;\n}\n\nconst VSCode = () => {\n  return (\n    <>\n      <AppStyle.AppIcon>\n        <img alt=\"VSCode\" src={Icons.VSCode} />\n      </AppStyle.AppIcon>\n      <AppStyle.AppName>VSCode</AppStyle.AppName>\n    </>\n  );\n};\n\nexport const VSCodeDock = (props: VSCodeDockProps) => {\n  const { icon } = props;\n\n  return (\n    <>\n      <AppStyle.AppIcon>\n        <a href=\"https://vscode.dev/\" target=\"_blank\" rel=\"noreferrer\">\n          <img alt=\"VSCode\" src={icon} />\n        </a>\n      </AppStyle.AppIcon>\n    </>\n  );\n};\n\nexport default VSCode;\n","import Icons from \"../../../icons\";\nimport AppStyle from \"../app.style\";\n\ninterface FinderDockProps {\n  icon: string;\n}\n\nconst Finder = () => {\n  return (\n    <>\n      <AppStyle.AppIcon>\n        <img alt=\"Finder\" src={Icons.Finder} />\n      </AppStyle.AppIcon>\n      <AppStyle.AppName>Finder</AppStyle.AppName>\n    </>\n  );\n};\n\nexport const FinderDock = (props: FinderDockProps) => {\n  const { icon } = props;\n\n  return (\n    <>\n      <AppStyle.AppIcon>\n        <img alt=\"Finder\" src={icon} />\n      </AppStyle.AppIcon>\n    </>\n  );\n};\n\nexport default Finder;\n","import Icons from \"../../../icons\";\nimport AppStyle from \"../app.style\";\n\ninterface NotionDockProps {\n  icon: string;\n}\n\nconst Notion = () => {\n  return (\n    <>\n      <AppStyle.AppIcon>\n        <img alt=\"note\" src={Icons.Notion} />\n      </AppStyle.AppIcon>\n      <AppStyle.AppName>Notion</AppStyle.AppName>\n    </>\n  );\n};\n\nexport const NotionDock = (props: NotionDockProps) => {\n  const { icon } = props;\n\n  return (\n    <>\n      <AppStyle.AppIcon>\n        <img alt=\"note\" src={icon} />\n      </AppStyle.AppIcon>\n    </>\n  );\n};\n\nexport default Notion;\n","import type { AppType } from \"../../types\";\nimport { useEffect, useState } from \"react\";\n\nimport Dock from \"../Dock\";\n\nimport Resume, { ResumeDock } from \"./Resume\";\nimport Terminal, { TerminalDock } from \"./Terminal\";\nimport Spotify, { SpotifyDock } from \"./Spotify\";\nimport { NoteDock } from \"./Note\";\n\nimport { ChromeDock } from \"./Chrome\";\nimport { TelegramDock } from \"./Telegram\";\nimport { AppStoreDock } from \"./AppStore\";\nimport { VSCodeDock } from \"./VSCode\";\nimport { FinderDock } from \"./Finder\";\n\nimport { getCache } from \"../../hooks/useCached\";\n\nimport \"./index.css\";\nimport Icons from \"../../icons\";\nimport { NotionDock } from \"./Notion\";\n\ninterface ApplicationsProps {\n  onOpen: (appType: AppType) => void;\n}\n\nconst ApplicationsType = Object.freeze({\n  resume: \"resume\" as const,\n  terminal: \"terminal\" as const,\n  spotify: \"spotify\" as const,\n  notion: \"notion\" as const,\n});\n\nconst Applications = (props: ApplicationsProps) => {\n  const { onOpen } = props;\n  const [appIcons, setAppIcons] = useState<any>({});\n\n  useEffect(() => {\n    const loadCache = async () => {\n      const cacheList = {\n        appStore: await getCache(Icons.AppStore),\n        chrome: await getCache(Icons.Chrome),\n        finder: await getCache(Icons.Finder),\n        note: await getCache(Icons.Note),\n        notion: await getCache(Icons.Notion),\n        spotify: await getCache(Icons.Spotify),\n        telegram: await getCache(Icons.Telegram),\n        vscode: await getCache(Icons.VSCode),\n      };\n\n      setAppIcons(cacheList);\n    };\n\n    loadCache();\n  }, []);\n\n  const dockApps = [\n    {\n      name: \"Finder\",\n      type: null,\n      component: <FinderDock icon={appIcons.finder} />,\n    },\n    {\n      name: \"AppStore\",\n      type: null,\n      component: <AppStoreDock icon={appIcons.appStore} />,\n    },\n    {\n      name: \"Chrome\",\n      type: null,\n      component: <ChromeDock icon={appIcons.chrome} />,\n    },\n    {\n      name: \"Note\",\n      type: null,\n      component: <NoteDock icon={appIcons.note} />,\n    },\n    {\n      name: \"Notion\",\n      type: ApplicationsType.notion,\n      component: <NotionDock icon={appIcons.notion} />,\n    },\n    {\n      name: \"Spotify\",\n      type: ApplicationsType.spotify,\n      component: <SpotifyDock icon={appIcons.spotify} />,\n    },\n    {\n      name: \"Telegram\",\n      type: null,\n      component: <TelegramDock icon={appIcons.telegram} />,\n    },\n    {\n      name: \"Terminal\",\n      type: ApplicationsType.terminal,\n      component: <TerminalDock />,\n    },\n    {\n      name: \"VSCode\",\n      type: null,\n      component: <VSCodeDock icon={appIcons.vscode} />,\n    },\n    {\n      name: \"Resume\",\n      type: ApplicationsType.resume,\n      component: <ResumeDock />,\n    },\n  ];\n\n  return (\n    <div\n      className=\"w-full h-full relative grid p-4\"\n      // style={{\n      //   gridTemplateColumns: \"repeat(14, minmax(0, 1fr))\",\n      //   gridTemplateRows: \"repeat(8, minmax(0, 1fr))\",\n      // }}\n    >\n      <AppWrapper\n        classes=\"right-4 top-4\"\n        onOpen={() => onOpen(ApplicationsType.resume)}\n      >\n        <Resume />\n      </AppWrapper>\n      <AppWrapper\n        classes=\"right-24 top-4\"\n        onOpen={() => onOpen(ApplicationsType.terminal)}\n      >\n        <Terminal />\n      </AppWrapper>\n\n      <Dock>\n        {dockApps.map((app) => (\n          <DockWrapper\n            key={app.name}\n            appName={app.name}\n            onOpen={() => (app.type ? onOpen(app.type) : {})}\n          >\n            {app.component}\n          </DockWrapper>\n        ))}\n      </Dock>\n    </div>\n  );\n};\n\ninterface AppWrapperProps {\n  classes?: string;\n  onOpen: () => void;\n  children: JSX.Element;\n}\n\nconst AppWrapper = (props: AppWrapperProps) => {\n  const { classes, onOpen, children } = props;\n\n  return (\n    <div\n      // className={`w-20 h-24 absolute flex flex-col justify-center items-center cursor-pointer bg-red-200 ${classes}`}\n      className={`absolute flex flex-col justify-center items-center cursor-pointer ${classes}`}\n      onDoubleClick={onOpen}\n    >\n      {children}\n    </div>\n  );\n};\n\ninterface DockWrapperProps {\n  appName: string;\n  onOpen: () => void;\n  children: JSX.Element;\n}\n\nconst DockWrapper = (props: DockWrapperProps) => {\n  const { appName, onOpen, children } = props;\n\n  return (\n    <div className=\"relative\">\n      <div className=\"dock-app\" onClick={onOpen}>\n        {children}\n      </div>\n\n      <span\n        className=\"dock-app-name\"\n        style={{ transform: \"translate(-50%, 0)\" }}\n      >\n        {appName}\n      </span>\n    </div>\n  );\n};\n\nexport default Applications;\n"],"names":["props","children","className","style","transform","AppIcon","AppName","textShadow","ResumeDock","TerminalDock","SpotifyDock","icon","alt","src","NoteDock","ChromeDock","href","target","rel","TelegramDock","AppStoreDock","VSCodeDock","FinderDock","NotionDock","ApplicationsType","Object","freeze","resume","terminal","spotify","notion","AppWrapper","classes","onOpen","onDoubleClick","DockWrapper","appName","onClick","useState","appIcons","setAppIcons","useEffect","loadCache","getCache","Icons","cacheList","appStore","chrome","finder","note","telegram","vscode","dockApps","name","type","component","map","app"],"sourceRoot":""}